esphome:
  min_version: 2025.2.0
  name: esp32-louder
  platformio_options:
    board_build.flash_mode: dio
  on_boot:
  # use priority -100 so gpio and i2c dac is setup before volume is set
    priority: -100
    then:
    ## Set a volume limit just to be safe...
    - media_player.volume_set:
        id: louder_mediaplayer
        volume: 5%

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    version: recommended

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: "xxx"

ota:
  - platform: esphome
    password: "xxx"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
   static_ip: 192.168.2.65
   gateway: 192.168.2.1
   subnet: 255.255.255.0
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  #ap:
    #ssid: "Esp32-Louder Fallback Hotspot"
    #password: "2SJ8qzBXk3SN"

#captive_portal:

#psram:
  #mode: octal
  #speed: 80MHz

external_components:
  - source: github://mrtoy-me/esphome-components-test@dev
    components: [ tas5805m ]
    refresh: 0s

i2c:
  sda: GPIO21
  scl: GPIO27
  frequency: 400kHz
  scan: True

audio_dac:
  - platform: tas5805m
    id: tas5805m_dac
    enable_pin: GPIO33

i2s_audio:
  i2s_lrclk_pin: GPIO25
  i2s_bclk_pin: GPIO26

speaker:
  - platform: i2s_audio
    id: speaker_id
    dac_type: external
    i2s_dout_pin: GPIO22
    audio_dac: tas5805m_dac
    channel: stereo
    sample_rate: 16000
    buffer_duration: 100ms

media_player:
  - platform: speaker
    name: Louder Mediaplayer
    id: louder_mediaplayer
    task_stack_in_psram: true
    volume_increment: 0.5%
    volume_min: 45%
    volume_max: 80%
    buffer_size: 100000
    codec_support_enabled: false
    announcement_pipeline:
      speaker: speaker_id
      format: WAV
    on_play:
      if:
        condition:
          switch.is_off: enable_louder
        then:
          switch.turn_on: enable_louder
    on_announcement:
      - if:
          condition:
            switch.is_off: enable_louder
          then:
            switch.turn_on: enable_louder

switch:
  - platform: template
    name: Enable Louder
    id: enable_louder
    optimistic: true
    restore_mode: ALWAYS_ON
    turn_on_action:
      - lambda: !lambda |-
          id(tas5805m_dac).set_deep_sleep_off();
    turn_off_action:
      - lambda: !lambda |-
          id(tas5805m_dac).set_deep_sleep_on();

interval:
  - interval: 30s
    then:
      - if:
          condition:
            - switch.is_on: enable_louder
            - for:
                time: 120s
                condition:
                  or:
                    - media_player.is_idle: louder_mediaplayer
                    - media_player.is_paused: louder_mediaplayer
          then:
            - switch.turn_off: enable_louder